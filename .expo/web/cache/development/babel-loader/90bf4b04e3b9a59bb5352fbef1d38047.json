{"ast":null,"code":"var _jsxFileName = \"/Users/admin/master_project/Order-up/App.js\";\nimport React from \"react\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { useStoreState, createStore, StoreProvider } from \"easy-peasy\";\nimport STORE from \"./src/Store/model\";\nvar store = createStore(STORE);\nimport WelcomeScreen from \"./src/screens/WelcomeScreen\";\nimport Dashboard from \"./src/screens/DashboardScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SignUp from \"./src/screens/Register\";\nimport FeedScreen from \"./src/screens/FeedStack\";\nimport ProfileScreen from \"./src/screens/ProfileStack\";\nvar Drawer = createDrawerNavigator();\n\nvar DrawerScreen = function DrawerScreen() {\n  return React.createElement(Drawer.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Feed\",\n    component: FeedScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AuthStack = createStackNavigator();\n\nvar AuthStackScreen = function AuthStackScreen(props) {\n  return React.createElement(AuthStack.Navigator, {\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthStack.Screen, {\n    name: \"Welcome\",\n    component: WelcomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"Login\",\n    component: LoginScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(AuthStack.Screen, {\n    name: \"SignUp\",\n    component: SignUp,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AppStack = createStackNavigator();\n\nvar AppStackScreen = function AppStackScreen(props) {\n  var isLoggedin = useStoreState(function (state) {\n    return state.isLoggedin;\n  });\n  return React.createElement(AppStack.Navigator, {\n    headerMode: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, !isLoggedin ? React.createElement(AppStack.Screen, {\n    name: \"Landing\",\n    component: AuthStackScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }) : React.createElement(AppStack.Screen, {\n    name: \"Dashboard\",\n    component: Dashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar App = function App() {\n  return React.createElement(StoreProvider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(AppStackScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/admin/master_project/Order-up/App.js"],"names":["React","TextInput","NavigationContainer","createStackNavigator","createDrawerNavigator","useStoreState","createStore","StoreProvider","STORE","store","WelcomeScreen","Dashboard","LoginScreen","SignUp","FeedScreen","ProfileScreen","Drawer","DrawerScreen","AuthStack","AuthStackScreen","props","AppStack","AppStackScreen","isLoggedin","state","App"],"mappings":";AAKA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAQA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,aAArC,QAA0D,YAA1D;AACA,OAAOC,KAAP;AACA,IAAMC,KAAK,GAAGH,WAAW,CAACE,KAAD,CAAzB;AAEA,OAAOE,aAAP;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;AACA,OAAOC,MAAP;AACA,OAAOC,UAAP;AACA,OAAOC,aAAP;AAEA,IAAMC,MAAM,GAAGZ,qBAAqB,EAApC;;AACA,IAAMa,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,SACE,oBAAC,MAAD,CAAQ,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEH,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;AAQA,IAAMI,SAAS,GAAGf,oBAAoB,EAAtC;;AACA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SACE,oBAAC,SAAD,CAAW,SAAX;AAAqB,IAAA,UAAU,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,SAAvB;AAAiC,IAAA,SAAS,EAAEV,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,OAAvB;AAA+B,IAAA,SAAS,EAAEE,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD,CAAW,MAAX;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,SAAS,EAAEC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CARD;;AAUA,IAAMQ,QAAQ,GAAGlB,oBAAoB,EAArC;;AACA,IAAMmB,cAAc,GAAG,SAAjBA,cAAiB,CAACF,KAAD,EAAW;AAChC,MAAMG,UAAU,GAAGlB,aAAa,CAAC,UAACmB,KAAD;AAAA,WAAWA,KAAK,CAACD,UAAjB;AAAA,GAAD,CAAhC;AACA,SACE,oBAAC,QAAD,CAAU,SAAV;AAAoB,IAAA,UAAU,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,UAAD,GACC,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,SAAtB;AAAgC,IAAA,SAAS,EAAEJ,eAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,QAAD,CAAU,MAAV;AAAiB,IAAA,IAAI,EAAC,WAAtB;AAAkC,IAAA,SAAS,EAAER,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF;AASD,CAXD;;AAaA,IAAMc,GAAqB,GAAG,SAAxBA,GAAwB,GAAM;AAClC,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEhB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD,CARD;;AAUA,eAAegB,GAAf","sourcesContent":["/**\n * @format\n * @flow strict-local\n */\n\nimport React from \"react\";\nimport {\n  ScrollView,\n  View,\n  Text,\n  StatusBar,\n  TouchableOpacity,\n} from \"react-native\";\nimport { TextInput } from \"react-native-paper\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { useStoreState, createStore, StoreProvider } from \"easy-peasy\";\nimport STORE from \"./src/Store/model\";\nconst store = createStore(STORE);\n\nimport WelcomeScreen from \"./src/screens/WelcomeScreen\";\nimport Dashboard from \"./src/screens/DashboardScreen\";\nimport LoginScreen from \"./src/screens/LoginScreen\";\nimport SignUp from \"./src/screens/Register\";\nimport FeedScreen from \"./src/screens/FeedStack\";\nimport ProfileScreen from \"./src/screens/ProfileStack\";\n\nconst Drawer = createDrawerNavigator();\nconst DrawerScreen = () => {\n  return (\n    <Drawer.Navigator>\n      <Drawer.Screen name=\"Feed\" component={FeedScreen} />\n    </Drawer.Navigator>\n  );\n};\n\nconst AuthStack = createStackNavigator();\nconst AuthStackScreen = (props) => {\n  return (\n    <AuthStack.Navigator headerMode=\"none\">\n      <AuthStack.Screen name=\"Welcome\" component={WelcomeScreen} />\n      <AuthStack.Screen name=\"Login\" component={LoginScreen} />\n      <AuthStack.Screen name=\"SignUp\" component={SignUp} />\n    </AuthStack.Navigator>\n  );\n};\n\nconst AppStack = createStackNavigator();\nconst AppStackScreen = (props) => {\n  const isLoggedin = useStoreState((state) => state.isLoggedin);\n  return (\n    <AppStack.Navigator headerMode=\"none\">\n      {!isLoggedin ? (\n        <AppStack.Screen name=\"Landing\" component={AuthStackScreen} />\n      ) : (\n        <AppStack.Screen name=\"Dashboard\" component={Dashboard} />\n      )}\n    </AppStack.Navigator>\n  );\n};\n\nconst App: () => React$Node = () => {\n  return (\n    <StoreProvider store={store}>\n      <NavigationContainer>\n        <AppStackScreen />\n      </NavigationContainer>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}