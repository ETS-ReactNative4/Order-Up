{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/admin/master_project/Order-up/node_modules/react-native-paper/src/components/Menu/Menu.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { withTheme } from \"../../core/theming\";\nimport Portal from \"../Portal/Portal\";\nimport Surface from \"../Surface\";\nimport MenuItem from \"./MenuItem\";\nvar SCREEN_INDENT = 8;\nvar ANIMATION_DURATION = 250;\nvar EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\nvar Menu = function (_React$Component) {\n  _inherits(Menu, _React$Component);\n\n  var _super = _createSuper(Menu);\n\n  function Menu() {\n    var _this;\n\n    _classCallCheck(this, Menu);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      top: 0,\n      left: 0,\n      menuLayout: {\n        width: 0,\n        height: 0\n      },\n      anchorLayout: {\n        width: 0,\n        height: 0\n      },\n      opacityAnimation: new Animated.Value(0),\n      scaleAnimation: new Animated.ValueXY({\n        x: 0,\n        y: 0\n      })\n    };\n\n    _this._measureMenuLayout = function () {\n      return new Promise(function (resolve) {\n        if (_this._menu) {\n          _this._menu.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this._measureAnchorLayout = function () {\n      return new Promise(function (resolve) {\n        if (_this._anchor) {\n          _this._anchor.measureInWindow(function (x, y, width, height) {\n            resolve({\n              x: x,\n              y: y,\n              width: width,\n              height: height\n            });\n          });\n        }\n      });\n    };\n\n    _this._updateVisibility = function () {\n      if (_this.props.visible) {\n        _this._show();\n      } else {\n        _this._hide();\n      }\n    };\n\n    _this._show = function _callee() {\n      var _await$Promise$all, _await$Promise$all2, menuLayout, anchorLayout;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              BackHandler.addEventListener('hardwareBackPress', _this.props.onDismiss);\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Promise.all([_this._measureMenuLayout(), _this._measureAnchorLayout()]));\n\n            case 3:\n              _await$Promise$all = _context.sent;\n              _await$Promise$all2 = _slicedToArray(_await$Promise$all, 2);\n              menuLayout = _await$Promise$all2[0];\n              anchorLayout = _await$Promise$all2[1];\n\n              if (!(!menuLayout.width || !menuLayout.height || !anchorLayout.width || !anchorLayout.height)) {\n                _context.next = 11;\n                break;\n              }\n\n              BackHandler.removeEventListener('hardwareBackPress', _this.props.onDismiss);\n              setTimeout(function () {\n                _this._show();\n              }, ANIMATION_DURATION);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              _this.setState({\n                left: anchorLayout.x,\n                top: anchorLayout.y,\n                anchorLayout: {\n                  height: anchorLayout.height,\n                  width: anchorLayout.width\n                },\n                menuLayout: {\n                  width: menuLayout.width,\n                  height: menuLayout.height\n                }\n              }, function () {\n                Animated.parallel([Animated.timing(_this.state.scaleAnimation, {\n                  toValue: {\n                    x: menuLayout.width,\n                    y: menuLayout.height\n                  },\n                  duration: ANIMATION_DURATION,\n                  easing: EASING,\n                  useNativeDriver: true\n                }), Animated.timing(_this.state.opacityAnimation, {\n                  toValue: 1,\n                  duration: ANIMATION_DURATION,\n                  easing: EASING,\n                  useNativeDriver: true\n                })]).start();\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._hide = function () {\n      BackHandler.removeEventListener('hardwareBackPress', _this.props.onDismiss);\n      Animated.timing(_this.state.opacityAnimation, {\n        toValue: 0,\n        duration: ANIMATION_DURATION,\n        easing: EASING,\n        useNativeDriver: true\n      }).start(function (finished) {\n        if (finished) {\n          _this.state.scaleAnimation.setValue({\n            x: 0,\n            y: 0\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Menu, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        this._updateVisibility();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this.props.onDismiss);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          visible = _this$props.visible,\n          anchor = _this$props.anchor,\n          style = _this$props.style,\n          children = _this$props.children,\n          theme = _this$props.theme,\n          onDismiss = _this$props.onDismiss;\n      var _this$state = this.state,\n          menuLayout = _this$state.menuLayout,\n          anchorLayout = _this$state.anchorLayout,\n          opacityAnimation = _this$state.opacityAnimation,\n          scaleAnimation = _this$state.scaleAnimation;\n      var additionalVerticalValue = Platform.select({\n        android: 24,\n        default: 0\n      });\n      var _this$state2 = this.state,\n          left = _this$state2.left,\n          top = _this$state2.top;\n      var scaleTransforms = [{\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1]\n        })\n      }, {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1]\n        })\n      }];\n      var positionTransforms = [];\n\n      var _Dimensions$get = Dimensions.get('screen'),\n          screenWidth = _Dimensions$get.width,\n          screenHeight = _Dimensions$get.height;\n\n      if (left <= screenWidth - menuLayout.width - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [-(menuLayout.width / 2), 0]\n          })\n        });\n\n        if (left >= 0 && left < SCREEN_INDENT) {\n          left = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateX: scaleAnimation.x.interpolate({\n            inputRange: [0, menuLayout.width],\n            outputRange: [menuLayout.width / 2, 0]\n          })\n        });\n        left += anchorLayout.width - menuLayout.width;\n        var right = left + menuLayout.width;\n\n        if (right <= screenWidth && right > screenWidth - SCREEN_INDENT) {\n          left = screenWidth - SCREEN_INDENT - menuLayout.width;\n        }\n      }\n\n      if (top <= screenHeight - menuLayout.height - SCREEN_INDENT) {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [-(menuLayout.height / 2), 0]\n          })\n        });\n\n        if (top >= 0 && top < SCREEN_INDENT) {\n          top = SCREEN_INDENT;\n        }\n      } else {\n        positionTransforms.push({\n          translateY: scaleAnimation.y.interpolate({\n            inputRange: [0, menuLayout.height],\n            outputRange: [menuLayout.height / 2, 0]\n          })\n        });\n        top += anchorLayout.height - menuLayout.height;\n        var bottom = top + menuLayout.height + additionalVerticalValue;\n\n        if (bottom <= screenHeight && bottom > screenHeight - SCREEN_INDENT) {\n          top = screenHeight - SCREEN_INDENT - menuLayout.height - additionalVerticalValue;\n        }\n      }\n\n      var shadowMenuContainerStyle = {\n        opacity: opacityAnimation,\n        transform: scaleTransforms,\n        borderRadius: theme.roundness\n      };\n\n      var positionStyle = _objectSpread({\n        top: top + additionalVerticalValue\n      }, I18nManager.isRTL ? {\n        right: left\n      } : {\n        left: left\n      });\n\n      return React.createElement(View, {\n        ref: function ref(_ref2) {\n          _this2._anchor = _ref2;\n        },\n        collapsable: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 7\n        }\n      }, anchor, React.createElement(Portal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 9\n        }\n      }, visible ? React.createElement(TouchableWithoutFeedback, {\n        onPress: onDismiss,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }\n      })) : null, React.createElement(View, {\n        ref: function ref(_ref) {\n          if (!_this2._menu) {\n            _this2._menu = _ref;\n\n            if (visible) {\n              _this2._show();\n            }\n          }\n        },\n        collapsable: false,\n        pointerEvents: visible ? 'auto' : 'none',\n        style: [styles.wrapper, positionStyle, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          transform: positionTransforms\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }, React.createElement(Surface, {\n        style: [styles.shadowMenuContainer, shadowMenuContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 15\n        }\n      }, children)))));\n    }\n  }]);\n\n  return Menu;\n}(React.Component);\n\nMenu.Item = MenuItem;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute'\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8\n  }\n});\nexport default withTheme(Menu);","map":{"version":3,"sources":["/Users/admin/master_project/Order-up/node_modules/react-native-paper/src/components/Menu/Menu.js"],"names":["React","withTheme","Portal","Surface","MenuItem","SCREEN_INDENT","ANIMATION_DURATION","EASING","Easing","bezier","Menu","state","top","left","menuLayout","width","height","anchorLayout","opacityAnimation","Animated","Value","scaleAnimation","ValueXY","x","y","_measureMenuLayout","Promise","resolve","_menu","measureInWindow","_measureAnchorLayout","_anchor","_updateVisibility","props","visible","_show","_hide","BackHandler","addEventListener","onDismiss","all","removeEventListener","setTimeout","setState","parallel","timing","toValue","duration","easing","useNativeDriver","start","finished","setValue","prevProps","anchor","style","children","theme","additionalVerticalValue","Platform","select","android","default","scaleTransforms","scaleX","interpolate","inputRange","outputRange","scaleY","positionTransforms","Dimensions","get","screenWidth","screenHeight","push","translateX","right","translateY","bottom","shadowMenuContainerStyle","opacity","transform","borderRadius","roundness","positionStyle","I18nManager","isRTL","ref","StyleSheet","absoluteFill","styles","wrapper","shadowMenuContainer","Component","Item","create","position","paddingVertical","elevation"],"mappings":";;;;;;;;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;;;AAYA,SAASC,SAAT;AAEA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,QAAP;AAoCA,IAAMC,aAAa,GAAG,CAAtB;AAEA,IAAMC,kBAAkB,GAAG,GAA3B;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,GAAd,EAAmB,CAAnB,EAAsB,GAAtB,EAA2B,CAA3B,CAAf;;IAqDMC,I;;;;;;;;;;;;;;;UAIJC,K,GAAQ;AACNC,MAAAA,GAAG,EAAE,CADC;AAENC,MAAAA,IAAI,EAAE,CAFA;AAGNC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAHN;AAINC,MAAAA,YAAY,EAAE;AAAEF,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,MAAM,EAAE;AAApB,OAJR;AAKNE,MAAAA,gBAAgB,EAAE,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CALZ;AAMNC,MAAAA,cAAc,EAAE,IAAIF,QAAQ,CAACG,OAAb,CAAqB;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAArB;AANV,K;;UAsBRC,kB,GAAqB;AAAA,aACnB,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrB,YAAI,MAAKC,KAAT,EAAgB;AACd,gBAAKA,KAAL,CAAWC,eAAX,CAA2B,UAACN,CAAD,EAAIC,CAAJ,EAAOT,KAAP,EAAcC,MAAd,EAAyB;AAClDW,YAAAA,OAAO,CAAC;AAAEJ,cAAAA,CAAC,EAADA,CAAF;AAAKC,cAAAA,CAAC,EAADA,CAAL;AAAQT,cAAAA,KAAK,EAALA,KAAR;AAAeC,cAAAA,MAAM,EAANA;AAAf,aAAD,CAAP;AACD,WAFD;AAGD;AACF,OAND,CADmB;AAAA,K;;UASrBc,oB,GAAuB;AAAA,aACrB,IAAIJ,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrB,YAAI,MAAKI,OAAT,EAAkB;AAChB,gBAAKA,OAAL,CAAaF,eAAb,CAA6B,UAACN,CAAD,EAAIC,CAAJ,EAAOT,KAAP,EAAcC,MAAd,EAAyB;AACpDW,YAAAA,OAAO,CAAC;AAAEJ,cAAAA,CAAC,EAADA,CAAF;AAAKC,cAAAA,CAAC,EAADA,CAAL;AAAQT,cAAAA,KAAK,EAALA,KAAR;AAAeC,cAAAA,MAAM,EAANA;AAAf,aAAD,CAAP;AACD,WAFD;AAGD;AACF,OAND,CADqB;AAAA,K;;UASvBgB,iB,GAAoB,YAAM;AACxB,UAAI,MAAKC,KAAL,CAAWC,OAAf,EAAwB;AACtB,cAAKC,KAAL;AACD,OAFD,MAEO;AACL,cAAKC,KAAL;AACD;AACF,K;;UAEDD,K,GAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AACNE,cAAAA,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkD,MAAKL,KAAL,CAAWM,SAA7D;AADM;AAAA,+CAGmCb,OAAO,CAACc,GAAR,CAAY,CACnD,MAAKf,kBAAL,EADmD,EAEnD,MAAKK,oBAAL,EAFmD,CAAZ,CAHnC;;AAAA;AAAA;AAAA;AAGChB,cAAAA,UAHD;AAGaG,cAAAA,YAHb;;AAAA,oBAeJ,CAACH,UAAU,CAACC,KAAZ,IACA,CAACD,UAAU,CAACE,MADZ,IAEA,CAACC,YAAY,CAACF,KAFd,IAGA,CAACE,YAAY,CAACD,MAlBV;AAAA;AAAA;AAAA;;AAoBJqB,cAAAA,WAAW,CAACI,mBAAZ,CACE,mBADF,EAEE,MAAKR,KAAL,CAAWM,SAFb;AAIAG,cAAAA,UAAU,CAAC,YAAM;AACf,sBAAKP,KAAL;AACD,eAFS,EAEP7B,kBAFO,CAAV;AAxBI;;AAAA;AA8BN,oBAAKqC,QAAL,CACE;AACE9B,gBAAAA,IAAI,EAAEI,YAAY,CAACM,CADrB;AAEEX,gBAAAA,GAAG,EAAEK,YAAY,CAACO,CAFpB;AAGEP,gBAAAA,YAAY,EAAE;AACZD,kBAAAA,MAAM,EAAEC,YAAY,CAACD,MADT;AAEZD,kBAAAA,KAAK,EAAEE,YAAY,CAACF;AAFR,iBAHhB;AAOED,gBAAAA,UAAU,EAAE;AACVC,kBAAAA,KAAK,EAAED,UAAU,CAACC,KADR;AAEVC,kBAAAA,MAAM,EAAEF,UAAU,CAACE;AAFT;AAPd,eADF,EAaE,YAAM;AACJG,gBAAAA,QAAQ,CAACyB,QAAT,CAAkB,CAChBzB,QAAQ,CAAC0B,MAAT,CAAgB,MAAKlC,KAAL,CAAWU,cAA3B,EAA2C;AACzCyB,kBAAAA,OAAO,EAAE;AAAEvB,oBAAAA,CAAC,EAAET,UAAU,CAACC,KAAhB;AAAuBS,oBAAAA,CAAC,EAAEV,UAAU,CAACE;AAArC,mBADgC;AAEzC+B,kBAAAA,QAAQ,EAAEzC,kBAF+B;AAGzC0C,kBAAAA,MAAM,EAAEzC,MAHiC;AAIzC0C,kBAAAA,eAAe,EAAE;AAJwB,iBAA3C,CADgB,EAOhB9B,QAAQ,CAAC0B,MAAT,CAAgB,MAAKlC,KAAL,CAAWO,gBAA3B,EAA6C;AAC3C4B,kBAAAA,OAAO,EAAE,CADkC;AAE3CC,kBAAAA,QAAQ,EAAEzC,kBAFiC;AAG3C0C,kBAAAA,MAAM,EAAEzC,MAHmC;AAI3C0C,kBAAAA,eAAe,EAAE;AAJ0B,iBAA7C,CAPgB,CAAlB,EAaGC,KAbH;AAcD,eA5BH;;AA9BM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;UA8DRd,K,GAAQ,YAAM;AACZC,MAAAA,WAAW,CAACI,mBAAZ,CAAgC,mBAAhC,EAAqD,MAAKR,KAAL,CAAWM,SAAhE;AAEApB,MAAAA,QAAQ,CAAC0B,MAAT,CAAgB,MAAKlC,KAAL,CAAWO,gBAA3B,EAA6C;AAC3C4B,QAAAA,OAAO,EAAE,CADkC;AAE3CC,QAAAA,QAAQ,EAAEzC,kBAFiC;AAG3C0C,QAAAA,MAAM,EAAEzC,MAHmC;AAI3C0C,QAAAA,eAAe,EAAE;AAJ0B,OAA7C,EAKGC,KALH,CAKS,UAAAC,QAAQ,EAAI;AACnB,YAAIA,QAAJ,EAAc;AACZ,gBAAKxC,KAAL,CAAWU,cAAX,CAA0B+B,QAA1B,CAAmC;AAAE7B,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX,WAAnC;AACD;AACF,OATD;AAUD,K;;;;;;;uCAlHkB6B,S,EAAW;AAC5B,UAAIA,SAAS,CAACnB,OAAV,KAAsB,KAAKD,KAAL,CAAWC,OAArC,EAA8C;AAC5C,aAAKF,iBAAL;AACD;AACF;;;2CAEsB;AACrBK,MAAAA,WAAW,CAACI,mBAAZ,CAAgC,mBAAhC,EAAqD,KAAKR,KAAL,CAAWM,SAAhE;AACD;;;6BA4GQ;AAAA;;AAAA,wBACwD,KAAKN,KAD7D;AAAA,UACCC,OADD,eACCA,OADD;AAAA,UACUoB,MADV,eACUA,MADV;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAAA,UACyBC,QADzB,eACyBA,QADzB;AAAA,UACmCC,KADnC,eACmCA,KADnC;AAAA,UAC0ClB,SAD1C,eAC0CA,SAD1C;AAAA,wBAQH,KAAK5B,KARF;AAAA,UAILG,UAJK,eAILA,UAJK;AAAA,UAKLG,YALK,eAKLA,YALK;AAAA,UAMLC,gBANK,eAMLA,gBANK;AAAA,UAOLG,cAPK,eAOLA,cAPK;AAWP,UAAMqC,uBAAuB,GAAGC,QAAQ,CAACC,MAAT,CAAgB;AAC9CC,QAAAA,OAAO,EAAE,EADqC;AAE9CC,QAAAA,OAAO,EAAE;AAFqC,OAAhB,CAAhC;AAXO,yBAgBa,KAAKnD,KAhBlB;AAAA,UAgBDE,IAhBC,gBAgBDA,IAhBC;AAAA,UAgBKD,GAhBL,gBAgBKA,GAhBL;AAkBP,UAAMmD,eAAe,GAAG,CACtB;AACEC,QAAAA,MAAM,EAAE3C,cAAc,CAACE,CAAf,CAAiB0C,WAAjB,CAA6B;AACnCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAIpD,UAAU,CAACC,KAAf,CADuB;AAEnCoD,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFsB,SAA7B;AADV,OADsB,EAOtB;AACEC,QAAAA,MAAM,EAAE/C,cAAc,CAACG,CAAf,CAAiByC,WAAjB,CAA6B;AACnCC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAIpD,UAAU,CAACE,MAAf,CADuB;AAEnCmD,UAAAA,WAAW,EAAE,CAAC,CAAD,EAAI,CAAJ;AAFsB,SAA7B;AADV,OAPsB,CAAxB;AAgBA,UAAME,kBAAkB,GAAG,EAA3B;;AAlCO,4BAoC8CC,UAAU,CAACC,GAAX,CACnD,QADmD,CApC9C;AAAA,UAoCQC,WApCR,mBAoCCzD,KApCD;AAAA,UAoC6B0D,YApC7B,mBAoCqBzD,MApCrB;;AAyCP,UAAIH,IAAI,IAAI2D,WAAW,GAAG1D,UAAU,CAACC,KAAzB,GAAiCV,aAA7C,EAA4D;AAC1DgE,QAAAA,kBAAkB,CAACK,IAAnB,CAAwB;AACtBC,UAAAA,UAAU,EAAEtD,cAAc,CAACE,CAAf,CAAiB0C,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIpD,UAAU,CAACC,KAAf,CAD2B;AAEvCoD,YAAAA,WAAW,EAAE,CAAC,EAAErD,UAAU,CAACC,KAAX,GAAmB,CAArB,CAAD,EAA0B,CAA1B;AAF0B,WAA7B;AADU,SAAxB;;AAQA,YAAIF,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAGR,aAAxB,EAAuC;AACrCQ,UAAAA,IAAI,GAAGR,aAAP;AACD;AACF,OAZD,MAYO;AACLgE,QAAAA,kBAAkB,CAACK,IAAnB,CAAwB;AACtBC,UAAAA,UAAU,EAAEtD,cAAc,CAACE,CAAf,CAAiB0C,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIpD,UAAU,CAACC,KAAf,CAD2B;AAEvCoD,YAAAA,WAAW,EAAE,CAACrD,UAAU,CAACC,KAAX,GAAmB,CAApB,EAAuB,CAAvB;AAF0B,WAA7B;AADU,SAAxB;AAOAF,QAAAA,IAAI,IAAII,YAAY,CAACF,KAAb,GAAqBD,UAAU,CAACC,KAAxC;AAEA,YAAM6D,KAAK,GAAG/D,IAAI,GAAGC,UAAU,CAACC,KAAhC;;AAEA,YAAI6D,KAAK,IAAIJ,WAAT,IAAwBI,KAAK,GAAGJ,WAAW,GAAGnE,aAAlD,EAAiE;AAC/DQ,UAAAA,IAAI,GAAG2D,WAAW,GAAGnE,aAAd,GAA8BS,UAAU,CAACC,KAAhD;AACD;AACF;;AAGD,UAAIH,GAAG,IAAI6D,YAAY,GAAG3D,UAAU,CAACE,MAA1B,GAAmCX,aAA9C,EAA6D;AAC3DgE,QAAAA,kBAAkB,CAACK,IAAnB,CAAwB;AACtBG,UAAAA,UAAU,EAAExD,cAAc,CAACG,CAAf,CAAiByC,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIpD,UAAU,CAACE,MAAf,CAD2B;AAEvCmD,YAAAA,WAAW,EAAE,CAAC,EAAErD,UAAU,CAACE,MAAX,GAAoB,CAAtB,CAAD,EAA2B,CAA3B;AAF0B,WAA7B;AADU,SAAxB;;AAQA,YAAIJ,GAAG,IAAI,CAAP,IAAYA,GAAG,GAAGP,aAAtB,EAAqC;AACnCO,UAAAA,GAAG,GAAGP,aAAN;AACD;AACF,OAZD,MAYO;AACLgE,QAAAA,kBAAkB,CAACK,IAAnB,CAAwB;AACtBG,UAAAA,UAAU,EAAExD,cAAc,CAACG,CAAf,CAAiByC,WAAjB,CAA6B;AACvCC,YAAAA,UAAU,EAAE,CAAC,CAAD,EAAIpD,UAAU,CAACE,MAAf,CAD2B;AAEvCmD,YAAAA,WAAW,EAAE,CAACrD,UAAU,CAACE,MAAX,GAAoB,CAArB,EAAwB,CAAxB;AAF0B,WAA7B;AADU,SAAxB;AAOAJ,QAAAA,GAAG,IAAIK,YAAY,CAACD,MAAb,GAAsBF,UAAU,CAACE,MAAxC;AAEA,YAAM8D,MAAM,GAAGlE,GAAG,GAAGE,UAAU,CAACE,MAAjB,GAA0B0C,uBAAzC;;AAEA,YAAIoB,MAAM,IAAIL,YAAV,IAA0BK,MAAM,GAAGL,YAAY,GAAGpE,aAAtD,EAAqE;AACnEO,UAAAA,GAAG,GACD6D,YAAY,GACZpE,aADA,GAEAS,UAAU,CAACE,MAFX,GAGA0C,uBAJF;AAKD;AACF;;AAED,UAAMqB,wBAAwB,GAAG;AAC/BC,QAAAA,OAAO,EAAE9D,gBADsB;AAE/B+D,QAAAA,SAAS,EAAElB,eAFoB;AAG/BmB,QAAAA,YAAY,EAAEzB,KAAK,CAAC0B;AAHW,OAAjC;;AAMA,UAAMC,aAAa;AACjBxE,QAAAA,GAAG,EAAEA,GAAG,GAAG8C;AADM,SAEb2B,WAAW,CAACC,KAAZ,GAAoB;AAAEV,QAAAA,KAAK,EAAE/D;AAAT,OAApB,GAAsC;AAAEA,QAAAA,IAAI,EAAJA;AAAF,OAFzB,CAAnB;;AAKA,aACE,oBAAC,IAAD;AACE,QAAA,GAAG,EAAE,aAAA0E,KAAG,EAAI;AACV,UAAA,MAAI,CAACxD,OAAL,GAAewD,KAAf;AACD,SAHH;AAIE,QAAA,WAAW,EAAE,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMGjC,MANH,EAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGpB,OAAO,GACN,oBAAC,wBAAD;AAA0B,QAAA,OAAO,EAAEK,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEiD,UAAU,CAACC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADM,GAIJ,IALN,EAME,oBAAC,IAAD;AACE,QAAA,GAAG,EAAE,aAAAF,IAAG,EAAI;AAKV,cAAI,CAAC,MAAI,CAAC3D,KAAV,EAAiB;AACf,YAAA,MAAI,CAACA,KAAL,GAAa2D,IAAb;;AACA,gBAAIrD,OAAJ,EAAa;AACX,cAAA,MAAI,CAACC,KAAL;AACD;AACF;AACF,SAZH;AAaE,QAAA,WAAW,EAAE,KAbf;AAcE,QAAA,aAAa,EAAED,OAAO,GAAG,MAAH,GAAY,MAdpC;AAeE,QAAA,KAAK,EAAE,CAACwD,MAAM,CAACC,OAAR,EAAiBP,aAAjB,EAAgC7B,KAAhC,CAfT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBE,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,KAAK,EAAE;AAAE0B,UAAAA,SAAS,EAAEZ;AAAb,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AACE,QAAA,KAAK,EAAE,CAACqB,MAAM,CAACE,mBAAR,EAA6Bb,wBAA7B,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGGvB,QAHH,CADF,CAjBF,CANF,CAPF,CADF;AA0CD;;;;EA9RgBxD,KAAK,CAAC6F,S;;AAAnBnF,I,CAEGoF,I,GAAO1F,Q;AA+RhB,IAAMsF,MAAM,GAAGF,UAAU,CAACO,MAAX,CAAkB;AAC/BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,QAAQ,EAAE;AADH,GADsB;AAI/BJ,EAAAA,mBAAmB,EAAE;AACnBZ,IAAAA,OAAO,EAAE,CADU;AAEnBiB,IAAAA,eAAe,EAAE,CAFE;AAGnBC,IAAAA,SAAS,EAAE;AAHQ;AAJU,CAAlB,CAAf;AAWA,eAAejG,SAAS,CAACS,IAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport {\n  StyleSheet,\n  Animated,\n  View,\n  Easing,\n  Dimensions,\n  TouchableWithoutFeedback,\n  I18nManager,\n  BackHandler,\n  Platform,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport type { Theme } from '../../types';\nimport Portal from '../Portal/Portal';\nimport Surface from '../Surface';\nimport MenuItem from './MenuItem';\n\ntype Props = {\n  /**\n   * Whether the Menu is currently visible.\n   */\n  visible: boolean,\n  /**\n   * The anchor to open the menu from. In most cases, it will be a button that opens the manu.\n   */\n  anchor: React.Node,\n  /**\n   * Callback called when Menu is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => mixed,\n  /**\n   * Content of the `Menu`.\n   */\n  children: React.Node,\n  style?: any,\n  /**\n   * @optional\n   */\n  theme: Theme,\n};\n\ntype State = {\n  top: number,\n  left: number,\n  menuLayout: { height: number, width: number },\n  anchorLayout: { height: number, width: number },\n  opacityAnimation: Animated.Value,\n  scaleAnimation: Animated.ValueXY,\n};\n\n// Minimum padding between the edge of the screen and the menu\nconst SCREEN_INDENT = 8;\n// From https://material.io/design/motion/speed.html#duration\nconst ANIMATION_DURATION = 250;\n// From the 'Standard easing' section of https://material.io/design/motion/speed.html#easing\nconst EASING = Easing.bezier(0.4, 0, 0.2, 1);\n\n/**\n * Menus display a list of choices on temporary elevated surfaces. Their placement varies based on the element that opens them.\n *\n *  <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/menu-1.png\" />\n *   <img class=\"medium\" src=\"screenshots/menu-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Button, Paragraph, Menu, Divider, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _openMenu = () => this.setState({ visible: true });\n *\n *   _closeMenu = () => this.setState({ visible: false });\n *\n *   render() {\n *     return (\n *       <Provider>\n *         <View\n *           style={{\n *             paddingTop: 50,\n *             flexDirection: 'row',\n *             justifyContent: 'center'\n *           }}>\n *           <Menu\n *             visible={this.state.visible}\n *             onDismiss={this._closeMenu}\n *             anchor={\n *               <Button onPress={this._openMenu}>Show menu</Button>\n *             }\n *           >\n *             <Menu.Item onPress={() => {}} title=\"Item 1\" />\n *             <Menu.Item onPress={() => {}} title=\"Item 2\" />\n *             <Divider />\n *             <Menu.Item onPress={() => {}} title=\"Item 3\" />\n *           </Menu>\n *         </View>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\nclass Menu extends React.Component<Props, State> {\n  // @component ./MenuItem.js\n  static Item = MenuItem;\n\n  state = {\n    top: 0,\n    left: 0,\n    menuLayout: { width: 0, height: 0 },\n    anchorLayout: { width: 0, height: 0 },\n    opacityAnimation: new Animated.Value(0),\n    scaleAnimation: new Animated.ValueXY({ x: 0, y: 0 }),\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visible !== this.props.visible) {\n      this._updateVisibility();\n    }\n  }\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this.props.onDismiss);\n  }\n\n  _anchor: ?View;\n  _menu: ?View;\n\n  _measureMenuLayout = () =>\n    new Promise(resolve => {\n      if (this._menu) {\n        this._menu.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  _measureAnchorLayout = () =>\n    new Promise(resolve => {\n      if (this._anchor) {\n        this._anchor.measureInWindow((x, y, width, height) => {\n          resolve({ x, y, width, height });\n        });\n      }\n    });\n\n  _updateVisibility = () => {\n    if (this.props.visible) {\n      this._show();\n    } else {\n      this._hide();\n    }\n  };\n\n  _show = async () => {\n    BackHandler.addEventListener('hardwareBackPress', this.props.onDismiss);\n\n    const [menuLayout, anchorLayout] = await Promise.all([\n      this._measureMenuLayout(),\n      this._measureAnchorLayout(),\n    ]);\n\n    // When visible is true for first render\n    // native views can be still not rendered and\n    // measureMenuLayout/measureAnchorLayout functions\n    // return wrong values e.g { x:0, y: 0, width: 0, height: 0 }\n    // so we have to wait until views are ready\n    // and rerun this function to show menu\n    if (\n      !menuLayout.width ||\n      !menuLayout.height ||\n      !anchorLayout.width ||\n      !anchorLayout.height\n    ) {\n      BackHandler.removeEventListener(\n        'hardwareBackPress',\n        this.props.onDismiss\n      );\n      setTimeout(() => {\n        this._show();\n      }, ANIMATION_DURATION);\n      return;\n    }\n\n    this.setState(\n      {\n        left: anchorLayout.x,\n        top: anchorLayout.y,\n        anchorLayout: {\n          height: anchorLayout.height,\n          width: anchorLayout.width,\n        },\n        menuLayout: {\n          width: menuLayout.width,\n          height: menuLayout.height,\n        },\n      },\n      () => {\n        Animated.parallel([\n          Animated.timing(this.state.scaleAnimation, {\n            toValue: { x: menuLayout.width, y: menuLayout.height },\n            duration: ANIMATION_DURATION,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n          Animated.timing(this.state.opacityAnimation, {\n            toValue: 1,\n            duration: ANIMATION_DURATION,\n            easing: EASING,\n            useNativeDriver: true,\n          }),\n        ]).start();\n      }\n    );\n  };\n\n  _hide = () => {\n    BackHandler.removeEventListener('hardwareBackPress', this.props.onDismiss);\n\n    Animated.timing(this.state.opacityAnimation, {\n      toValue: 0,\n      duration: ANIMATION_DURATION,\n      easing: EASING,\n      useNativeDriver: true,\n    }).start(finished => {\n      if (finished) {\n        this.state.scaleAnimation.setValue({ x: 0, y: 0 });\n      }\n    });\n  };\n\n  render() {\n    const { visible, anchor, style, children, theme, onDismiss } = this.props;\n\n    const {\n      menuLayout,\n      anchorLayout,\n      opacityAnimation,\n      scaleAnimation,\n    } = this.state;\n\n    // I don't know why but on Android measure function is wrong by 24\n    const additionalVerticalValue = Platform.select({\n      android: 24,\n      default: 0,\n    });\n\n    let { left, top } = this.state;\n\n    const scaleTransforms = [\n      {\n        scaleX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [0, 1],\n        }),\n      },\n      {\n        scaleY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [0, 1],\n        }),\n      },\n    ];\n\n    // We need to translate menu while animating scale to imitate transform origin for scale animation\n    const positionTransforms = [];\n\n    const { width: screenWidth, height: screenHeight } = Dimensions.get(\n      'screen'\n    );\n\n    // Check if menu fits horizontally and if not align it to right.\n    if (left <= screenWidth - menuLayout.width - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [-(menuLayout.width / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from left side\n      if (left >= 0 && left < SCREEN_INDENT) {\n        left = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateX: scaleAnimation.x.interpolate({\n          inputRange: [0, menuLayout.width],\n          outputRange: [menuLayout.width / 2, 0],\n        }),\n      });\n\n      left += anchorLayout.width - menuLayout.width;\n\n      const right = left + menuLayout.width;\n      // Check if menu position has enough space from right side\n      if (right <= screenWidth && right > screenWidth - SCREEN_INDENT) {\n        left = screenWidth - SCREEN_INDENT - menuLayout.width;\n      }\n    }\n\n    // Check if menu fits vertically and if not align it to bottom.\n    if (top <= screenHeight - menuLayout.height - SCREEN_INDENT) {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [-(menuLayout.height / 2), 0],\n        }),\n      });\n\n      // Check if menu position has enough space from top side\n      if (top >= 0 && top < SCREEN_INDENT) {\n        top = SCREEN_INDENT;\n      }\n    } else {\n      positionTransforms.push({\n        translateY: scaleAnimation.y.interpolate({\n          inputRange: [0, menuLayout.height],\n          outputRange: [menuLayout.height / 2, 0],\n        }),\n      });\n\n      top += anchorLayout.height - menuLayout.height;\n\n      const bottom = top + menuLayout.height + additionalVerticalValue;\n      // Check if menu position has enough space from bottom side\n      if (bottom <= screenHeight && bottom > screenHeight - SCREEN_INDENT) {\n        top =\n          screenHeight -\n          SCREEN_INDENT -\n          menuLayout.height -\n          additionalVerticalValue;\n      }\n    }\n\n    const shadowMenuContainerStyle = {\n      opacity: opacityAnimation,\n      transform: scaleTransforms,\n      borderRadius: theme.roundness,\n    };\n\n    const positionStyle = {\n      top: top + additionalVerticalValue,\n      ...(I18nManager.isRTL ? { right: left } : { left }),\n    };\n\n    return (\n      <View\n        ref={ref => {\n          this._anchor = ref;\n        }}\n        collapsable={false}\n      >\n        {anchor}\n        <Portal>\n          {visible ? (\n            <TouchableWithoutFeedback onPress={onDismiss}>\n              <View style={StyleSheet.absoluteFill} />\n            </TouchableWithoutFeedback>\n          ) : null}\n          <View\n            ref={ref => {\n              // This hack is needed to properly show menu\n              // when visible is `true` initially\n              // because in componentDidMount _menu ref is undefined\n              // because it's rendered in portal\n              if (!this._menu) {\n                this._menu = ref;\n                if (visible) {\n                  this._show();\n                }\n              }\n            }}\n            collapsable={false}\n            pointerEvents={visible ? 'auto' : 'none'}\n            style={[styles.wrapper, positionStyle, style]}\n          >\n            <Animated.View style={{ transform: positionTransforms }}>\n              <Surface\n                style={[styles.shadowMenuContainer, shadowMenuContainerStyle]}\n              >\n                {children}\n              </Surface>\n            </Animated.View>\n          </View>\n        </Portal>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n  },\n  shadowMenuContainer: {\n    opacity: 0,\n    paddingVertical: 8,\n    elevation: 8,\n  },\n});\n\nexport default withTheme(Menu);\n"]},"metadata":{},"sourceType":"module"}