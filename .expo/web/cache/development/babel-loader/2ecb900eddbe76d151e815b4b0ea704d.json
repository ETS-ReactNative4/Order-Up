{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/master_project/Order-up/src/screens/LoginScreen.js\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Input } from \"react-native-elements\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useStoreState, useStoreActions, action } from \"easy-peasy\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var user = useStoreState(function (state) {\n    return state.User;\n  });\n  var loggin = useStoreActions(function (action) {\n    return action.login;\n  });\n\n  var handlelogin = function handlelogin() {\n    var user = {\n      email: email,\n      password: password\n    };\n\n    if (email === user.email && password === user.password) {\n      loggin();\n    }\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Input, {\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(val) {\n      return setEmail(val);\n    },\n    leftIcon: React.createElement(AntDesign, {\n      name: \"mail\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(val) {\n      return setPassword(val);\n    },\n    secureTextEntry: true,\n    leftIcon: React.createElement(AntDesign, {\n      name: \"key\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: {\n      backgroundColor: \"#dd3e54\",\n      paddingHorizontal: 100,\n      paddingVertical: 10,\n      borderRadius: 20,\n      marginVertical: 7\n    },\n    onPress: function onPress() {\n      handlelogin();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"#fff\",\n      fontSize: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Enter\")));\n};\n\nexport default LoginScreen;","map":{"version":3,"sources":["/Users/admin/master_project/Order-up/src/screens/LoginScreen.js"],"names":["React","useState","Input","AntDesign","useStoreState","useStoreActions","action","LoginScreen","navigation","password","setPassword","email","setEmail","user","state","User","loggin","login","handlelogin","flex","justifyContent","alignItems","val","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginVertical","color","fontSize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,MAAzC,QAAuD,YAAvD;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBACNP,QAAQ,CAAC,EAAD,CADF;AAAA;AAAA,MAC/BQ,QAD+B;AAAA,MACrBC,WADqB;;AAAA,mBAEZT,QAAQ,CAAC,EAAD,CAFI;AAAA;AAAA,MAE/BU,KAF+B;AAAA,MAExBC,QAFwB;;AAItC,MAAMC,IAAI,GAAGT,aAAa,CAAC,UAACU,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAA1B;AACA,MAAMC,MAAM,GAAGX,eAAe,CAAC,UAACC,MAAD;AAAA,WAAYA,MAAM,CAACW,KAAnB;AAAA,GAAD,CAA9B;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAML,IAAI,GAAG;AACXF,MAAAA,KAAK,EAAEA,KADI;AAEXF,MAAAA,QAAQ,EAAEA;AAFC,KAAb;;AAIA,QAAIE,KAAK,KAAKE,IAAI,CAACF,KAAf,IAAwBF,QAAQ,KAAKI,IAAI,CAACJ,QAA9C,EAAwD;AACtDO,MAAAA,MAAM;AACP;AACF,GARD;;AASA,SACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLG,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,cAAc,EAAE,QAFX;AAGLC,MAAAA,UAAU,EAAE;AAHP,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,YAAY,EAAE,sBAACC,GAAD;AAAA,aAASV,QAAQ,CAACU,GAAD,CAAjB;AAAA,KAFhB;AAGE,IAAA,QAAQ,EAAE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,MAAhB;AAAuB,MAAA,IAAI,EAAE,EAA7B;AAAiC,MAAA,KAAK,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAYE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,YAAY,EAAE,sBAACA,GAAD;AAAA,aAASZ,WAAW,CAACY,GAAD,CAApB;AAAA,KAFhB;AAGE,IAAA,eAAe,MAHjB;AAIE,IAAA,QAAQ,EAAE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,KAAhB;AAAsB,MAAA,IAAI,EAAE,EAA5B;AAAgC,MAAA,KAAK,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAkBE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,eAAe,EAAE,SADZ;AAELC,MAAAA,iBAAiB,EAAE,GAFd;AAGLC,MAAAA,eAAe,EAAE,EAHZ;AAILC,MAAAA,YAAY,EAAE,EAJT;AAKLC,MAAAA,cAAc,EAAE;AALX,KADT;AAQE,IAAA,OAAO,EAAE,mBAAM;AACbT,MAAAA,WAAW;AACZ,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE;AACLU,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,QAAQ,EAAE;AAFL,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,CAlBF,CADF;AA0CD,CAzDD;;AA2DA,eAAetB,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport { Input } from \"react-native-elements\";\nimport { AntDesign } from \"@expo/vector-icons\";\nimport { useStoreState, useStoreActions, action } from \"easy-peasy\";\n\nconst LoginScreen = ({ navigation }) => {\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const user = useStoreState((state) => state.User);\n  const loggin = useStoreActions((action) => action.login);\n  const handlelogin = () => {\n    const user = {\n      email: email,\n      password: password,\n    };\n    if (email === user.email && password === user.password) {\n      loggin();\n    }\n  };\n  return (\n    <View\n      style={{\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <Input\n        placeholder=\"Email\"\n        onChangeText={(val) => setEmail(val)}\n        leftIcon={<AntDesign name=\"mail\" size={24} color=\"black\" />}\n      />\n      <Input\n        placeholder=\"Password\"\n        onChangeText={(val) => setPassword(val)}\n        secureTextEntry\n        leftIcon={<AntDesign name=\"key\" size={24} color=\"black\" />}\n      />\n      <TouchableOpacity\n        style={{\n          backgroundColor: \"#dd3e54\",\n          paddingHorizontal: 100,\n          paddingVertical: 10,\n          borderRadius: 20,\n          marginVertical: 7,\n        }}\n        onPress={() => {\n          handlelogin();\n        }}\n      >\n        <Text\n          style={{\n            color: \"#fff\",\n            fontSize: 16,\n          }}\n        >\n          Enter\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default LoginScreen;\n"]},"metadata":{},"sourceType":"module"}