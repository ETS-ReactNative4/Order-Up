{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/admin/master_project/Order-up/src/screens/MenuItem.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Constants from 'expo-constants';\nimport { Avatar, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\nvar IconComponent = function (_React$Component) {\n  _inherits(IconComponent, _React$Component);\n\n  var _super = _createSuper(IconComponent);\n\n  function IconComponent() {\n    var _this;\n\n    _classCallCheck(this, IconComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      is_added: false,\n      liked: false\n    };\n    return _this;\n  }\n\n  _createClass(IconComponent, [{\n    key: \"onShare\",\n    value: function onShare(description, price, image) {\n      var shareObj, result;\n      return _regeneratorRuntime.async(function onShare$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              shareObj = '${description} - ${image} - ${price}';\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(Share.share({\n                message: description\n              }));\n\n            case 4:\n              result = _context.sent;\n\n              if (result.action === Share.sharedAction) {\n                if (result.activityType) {} else {}\n              } else if (result.action === Share.dismissedAction) {}\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              alert(_context.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    }\n  }, {\n    key: \"addRating\",\n    value: function addRating() {\n      var liked = this.state.liked;\n      this.setState({\n        liked: !liked\n      });\n    }\n  }, {\n    key: \"addMenuToBill\",\n    value: function addMenuToBill() {\n      var is_added = this.state.is_added;\n\n      if (is_added === true) {\n        alert('You have remove an item to the list');\n      }\n\n      this.setState({\n        is_added: !is_added\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 14\n        }\n      }, React.createElement(Card.Title, {\n        title: this.props.is_main ? this.props.item_name : this.props.alt_name,\n        subtitle: this.props.is_main ? 'Main' : 'Alternative',\n        left: function left(props) {\n          return React.createElement(Avatar.Image, {\n            size: 30,\n            source: require(\"../assets/chef_img.png\"),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 171\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      }), React.createElement(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, \"R \", this.props.price), React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, this.props.description)), React.createElement(Card.Cover, {\n        source: {\n          uri: this.props.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }\n      }), React.createElement(Card.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.addMenuToBill();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, React.createElement(MaterialIcons, {\n        name: this.state.is_added ? \"remove-shopping-cart\" : \"add-shopping-cart\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 19\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.onShare(_this2.props.description, _this2.props.image, _this2.props.price);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"share\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      })), React.createElement(TouchableOpacity, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(MaterialIcons, {\n        name: \"attach-money\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.addRating();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(Ionicons, {\n        name: this.state.liked ? \"ios-heart\" : \"ios-heart-empty\",\n        color: this.state.liked ? \"red\" : \"\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return IconComponent;\n}(React.Component);\n\nexport { IconComponent as default };","map":{"version":3,"sources":["/Users/admin/master_project/Order-up/src/screens/MenuItem.js"],"names":["React","Constants","Avatar","Button","Card","Title","Paragraph","MaterialIcons","Ionicons","IconComponent","state","is_added","liked","description","price","image","shareObj","Share","share","message","result","action","sharedAction","activityType","dismissedAction","alert","setState","props","is_main","item_name","alt_name","require","uri","addMenuToBill","onShare","addRating","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, \n        View, \n        StyleSheet, \n        Share,\n        Alert,\n        TouchableOpacity } from 'react-native';\nimport Constants from 'expo-constants';\nimport { Avatar, \n        Button, \n        Card, \n        Title, \n        Paragraph } from 'react-native-paper';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Ionicons } from '@expo/vector-icons';\n\n\nexport default class IconComponent extends React.Component {\n\n  state = {\n    is_added: false,\n    liked: false\n  }\n\n  async onShare(description, price, image){\n    const shareObj = '${description} - ${image} - ${price}'\n    try {\n      const result = await Share.share({\n            message: description,\n          });\n\n          if (result.action === Share.sharedAction) {\n            if (result.activityType) {\n              // shared with activity type of result.activityType\n            } else {\n              // shared\n            }\n          } else if (result.action === Share.dismissedAction) {\n            // dismissed\n          }\n        } catch (error) {\n          alert(error.message);\n        }\n  }\n\n    addRating(){\n      const { liked } = this.state;\n      this.setState({ liked: !liked });  \n    }\n\n  addMenuToBill(){\n    const { is_added } = this.state;\n    if(is_added === true){\n      alert('You have remove an item to the list');\n    }\n    this.setState({ is_added: !is_added });\n  }\n\n\n\n  render() {\n    return (\n      <View>\n             <Card>\n              <Card.Title title={this.props.is_main ? this.props.item_name : this.props.alt_name} subtitle={this.props.is_main ? 'Main' : 'Alternative'} left={(props) => <Avatar.Image size={30} source={require('../assets/chef_img.png')} />} />\n              <Card.Content>\n                <Title>R {this.props.price}</Title>\n                <Paragraph>{this.props.description}</Paragraph>\n              </Card.Content>\n              <Card.Cover source={{ uri: this.props.image }} />\n              <Card.Actions>\n                <TouchableOpacity onPress={() => this.addMenuToBill()}>\n                  <MaterialIcons\n                      name= { this.state.is_added ? \"remove-shopping-cart\" : \"add-shopping-cart\"}\n                              size={30}\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => this.onShare(this.props.description, this.props.image, this.props.price)}>\n                    <MaterialIcons\n                        name=\"share\" size={30}\n                    />\n                </TouchableOpacity>\n                <TouchableOpacity>\n                  <MaterialIcons\n                    name=\"attach-money\" size={30}\n                  />\n                </TouchableOpacity>\n                <TouchableOpacity onPress={() => this.addRating()}>\n                <Ionicons\n                      name={this.state.liked ? \"ios-heart\" : \"ios-heart-empty\"}\n                      color={this.state.liked ? \"red\" : \"\"}\n                      size={30}\n                   />\n                </TouchableOpacity>\n              </Card.Actions>\n            </Card>       \n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}