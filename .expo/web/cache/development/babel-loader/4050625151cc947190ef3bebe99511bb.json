{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/admin/master_project/Order-up/node_modules/react-native-paper/src/components/RadioButton.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RadioButtonGroup from \"./RadioButtonGroup\";\nimport RadioButtonAndroid from \"./RadioButtonAndroid\";\nimport RadioButtonIOS from \"./RadioButtonIOS\";\nimport { withTheme } from \"../core/theming\";\n\nvar RadioButton = function (_React$Component) {\n  _inherits(RadioButton, _React$Component);\n\n  var _super = _createSuper(RadioButton);\n\n  function RadioButton() {\n    _classCallCheck(this, RadioButton);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      return Platform.OS === 'ios' ? React.createElement(RadioButtonIOS, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      })) : React.createElement(RadioButtonAndroid, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return RadioButton;\n}(React.Component);\n\nRadioButton.Group = RadioButtonGroup;\nRadioButton.Android = RadioButtonAndroid;\nRadioButton.IOS = RadioButtonIOS;\nexport default withTheme(RadioButton);","map":{"version":3,"sources":["/Users/admin/master_project/Order-up/node_modules/react-native-paper/src/components/RadioButton.js"],"names":["React","RadioButtonGroup","RadioButtonAndroid","RadioButtonIOS","withTheme","RadioButton","Platform","OS","props","Component","Group","Android","IOS"],"mappings":";;;;;;;;;;;;AAEA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAEA,OAAOC,gBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,cAAP;AACA,SAASC,SAAT;;IAwFMC,W;;;;;;;;;;;;;6BAUK;AACP,aAAOC,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GACL,oBAAC,cAAD,eAAoB,KAAKC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADK,GAGL,oBAAC,kBAAD,eAAwB,KAAKA,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF;AAKD;;;;EAhBuBR,KAAK,CAACS,S;;AAA1BJ,W,CAEGK,K,GAAQT,gB;AAFXI,W,CAKGM,O,GAAUT,kB;AALbG,W,CAQGO,G,GAAMT,c;AAWf,eAAeC,SAAS,CAACC,WAAD,CAAxB","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup from './RadioButtonGroup';\nimport RadioButtonAndroid from './RadioButtonAndroid';\nimport RadioButtonIOS from './RadioButtonIOS';\nimport { withTheme } from '../core/theming';\nimport type { Theme } from '../types';\n\ntype Props = {|\n  /**\n   * Value of the radio button\n   */\n  value: string,\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked',\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean,\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => mixed,\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string,\n  /**\n   * Custom color for radio.\n   */\n  color?: string,\n  /**\n   * @optional\n   */\n  theme: Theme,\n|};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.js\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.js\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.js\n  static IOS = RadioButtonIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <RadioButtonIOS {...this.props} />\n    ) : (\n      <RadioButtonAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(RadioButton);\n"]},"metadata":{},"sourceType":"module"}